{"componentChunkName":"component---src-templates-post-tsx","path":"/210315-post/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"개인적으로-코딩-컨밴션을-중요하게-생각하는-편이다\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9-%EC%BB%A8%EB%B0%B4%EC%85%98%EC%9D%84-%EC%A4%91%EC%9A%94%ED%95%98%EA%B2%8C-%EC%83%9D%EA%B0%81%ED%95%98%EB%8A%94-%ED%8E%B8%EC%9D%B4%EB%8B%A4\" aria-label=\"개인적으로 코딩 컨밴션을 중요하게 생각하는 편이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개인적으로 코딩 컨밴션을 중요하게 생각하는 편이다.</h3>\n<h3 id=\"변수명-함수명-등을-통일된-네이밍으로-사용하는-습관이-필요하다\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EB%AA%85-%ED%95%A8%EC%88%98%EB%AA%85-%EB%93%B1%EC%9D%84-%ED%86%B5%EC%9D%BC%EB%90%9C-%EB%84%A4%EC%9D%B4%EB%B0%8D%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%8A%B5%EA%B4%80%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%98%EB%8B%A4\" aria-label=\"변수명 함수명 등을 통일된 네이밍으로 사용하는 습관이 필요하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수명, 함수명 등을 통일된 네이밍으로 사용하는 습관이 필요하다.</h3>\n<h3 id=\"이-습관은-자신의-코드를-나와-다른-이들이-볼-때-조금-더-빠르게-이해할-수-있는데-도움이-된다고-생각한다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EC%8A%B5%EA%B4%80%EC%9D%80-%EC%9E%90%EC%8B%A0%EC%9D%98-%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%82%98%EC%99%80-%EB%8B%A4%EB%A5%B8-%EC%9D%B4%EB%93%A4%EC%9D%B4-%EB%B3%BC-%EB%95%8C-%EC%A1%B0%EA%B8%88-%EB%8D%94-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EB%8D%B0-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%9C%EB%8B%A4%EA%B3%A0-%EC%83%9D%EA%B0%81%ED%95%9C%EB%8B%A4\" aria-label=\"이 습관은 자신의 코드를 나와 다른 이들이 볼 때 조금 더 빠르게 이해할 수 있는데 도움이 된다고 생각한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 습관은 자신의 코드를 나와 다른 이들이 볼 때 조금 더 빠르게 이해할 수 있는데 도움이 된다고 생각한다.</h3>\n<h3 id=\"그래서-자바크립스를-깊숙히-들어가기-앞서-코딩-컨밴션에-대해서-알아보았다\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%9E%90%EB%B0%94%ED%81%AC%EB%A6%BD%EC%8A%A4%EB%A5%BC-%EA%B9%8A%EC%88%99%ED%9E%88-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C-%EC%BD%94%EB%94%A9-%EC%BB%A8%EB%B0%B4%EC%85%98%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%95%98%EB%8B%A4\" aria-label=\"그래서 자바크립스를 깊숙히 들어가기 앞서 코딩 컨밴션에 대해서 알아보았다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서 자바크립스를 깊숙히 들어가기 앞서, 코딩 컨밴션에 대해서 알아보았다.</h3>\n<h1 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h1>\n<ul>\n<li>네이밍 기본</li>\n<li>파일 및 패키지</li>\n<li>변수</li>\n<li>함수</li>\n<li>객체</li>\n<li>클래스</li>\n<li>기타</li>\n</ul>\n<h1 id=\"네이밍-기본\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B8%B0%EB%B3%B8\" aria-label=\"네이밍 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네이밍 기본</h1>\n<ul>\n<li>\n<p><strong>단일 글자</strong>로 이름을 짓지 않고 이름을 통해 쓰임새를 알 수 있도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">q</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>이름의 맨 앞이나 맨 뒤쪽에 <strong>밑줄( _ )</strong>을 사용하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>__firstName__ <span class=\"token operator\">=</span> <span class=\"token string\">'Panda'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName_ <span class=\"token operator\">=</span> <span class=\"token string\">'Panda'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Panda'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Panda'</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>this</strong>를 변수의 값으로 사용하지 않는다. 필요하다면 <strong>화살표 함수(Arrow Function)</strong>이나 <strong>바인딩</strong>을 사용하라.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>가독성을 위해 약어는 <strong>모두 대문자</strong> 혹은 <strong>모두 소문자</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> SmsContainer <span class=\"token keyword\">from</span> <span class=\"token string\">'./containers/SmsContainer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">const</span> HttpRequests <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> SMSContainer <span class=\"token keyword\">from</span> <span class=\"token string\">'./containers/SMSContainer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">const</span> HTTPRequests <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// also good</span>\n<span class=\"token keyword\">const</span> httpRequests <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// best</span>\n<span class=\"token keyword\">import</span> TextMessageContainer <span class=\"token keyword\">from</span> <span class=\"token string\">'./containers/TextMessageContainer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// best</span>\n<span class=\"token keyword\">const</span> requests <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>export되는 파일 내의 모든 상수는 <strong>모두 대문자</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PRIVATE_VARIABLE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'should not be unnecessarily uppercased within a file'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">THING_TO_BE_CHANGED</span> <span class=\"token operator\">=</span> <span class=\"token string\">'should obviously not be uppercased'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> <span class=\"token constant\">REASSIGNABLE_VARIABLE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'do not use let with uppercase variables'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ---</span>\n\n<span class=\"token comment\">// allowed but does not supply semantic value</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> apiKey <span class=\"token operator\">=</span> <span class=\"token string\">'SOMEKEY'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// better in most cases</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">API_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SOMEKEY'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ---</span>\n\n<span class=\"token comment\">// bad - unnecessarily uppercases key while adding no semantic value</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">MAPPING</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">KEY</span><span class=\"token operator\">:</span> <span class=\"token string\">'value'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">MAPPING</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">'value'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>이름에 복수형을 표기하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//bad</span>\n<span class=\"token keyword\">let</span> delivery_notes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">let</span> delivery_note_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"two\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>줄일말을 사용하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//bad</span>\n<span class=\"token keyword\">let</span> del_note <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">let</span> delivery_note <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"파일-및-패키지\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%BC-%EB%B0%8F-%ED%8C%A8%ED%82%A4%EC%A7%80\" aria-label=\"파일 및 패키지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파일 및 패키지</h1>\n<ul>\n<li>\n<p>파일의 이름은 소문자로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\nLonDon<span class=\"token punctuation\">.</span>png\n<span class=\"token constant\">HELLOWORLD</span><span class=\"token punctuation\">.</span>pdf\n<span class=\"token constant\">APP</span><span class=\"token punctuation\">.</span>js\n\n<span class=\"token comment\">// good</span>\nlondon<span class=\"token punctuation\">.</span>png\nhelloworld<span class=\"token punctuation\">.</span>pdf\napp<span class=\"token punctuation\">.</span>js</code></pre></div>\n</li>\n<li>\n<p>패키지의 이름은 <strong>lowerCamelCase</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\nmy<span class=\"token punctuation\">.</span>examplecode<span class=\"token punctuation\">.</span>deepspace\nmy<span class=\"token punctuation\">.</span>example_code<span class=\"token punctuation\">.</span>deep_space\n\n<span class=\"token comment\">// good</span>\nmy<span class=\"token punctuation\">.</span>exampleCode<span class=\"token punctuation\">.</span>deepSpace</code></pre></div>\n</li>\n<li>\n<p>파일의 이름은 <strong>default export의 이름</strong>과 일치해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// file 1 contents</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckBox</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> CheckBox<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// file 2 contents</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fortyTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// file 3 contents</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">insideDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// in some other file</span>\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> CheckBox <span class=\"token keyword\">from</span> <span class=\"token string\">'./checkBox'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PascalCase import/export, camelCase filename</span>\n<span class=\"token keyword\">import</span> FortyTwo <span class=\"token keyword\">from</span> <span class=\"token string\">'./FortyTwo'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PascalCase import/filename, camelCase export</span>\n<span class=\"token keyword\">import</span> InsideDirectory <span class=\"token keyword\">from</span> <span class=\"token string\">'./InsideDirectory'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PascalCase import/filename, camelCase export</span>\n\n<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> CheckBox <span class=\"token keyword\">from</span> <span class=\"token string\">'./check_box'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PascalCase import/export, snake_case filename</span>\n<span class=\"token keyword\">import</span> forty_two <span class=\"token keyword\">from</span> <span class=\"token string\">'./forty_two'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// snake_case import/filename, camelCase export</span>\n<span class=\"token keyword\">import</span> inside_directory <span class=\"token keyword\">from</span> <span class=\"token string\">'./inside_directory'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// snake_case import, camelCase export</span>\n<span class=\"token keyword\">import</span> index <span class=\"token keyword\">from</span> <span class=\"token string\">'./inside_directory/index'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// requiring the index file explicitly</span>\n<span class=\"token keyword\">import</span> insideDirectory <span class=\"token keyword\">from</span> <span class=\"token string\">'./insideDirectory/index'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// requiring the index file explicitly</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> CheckBox <span class=\"token keyword\">from</span> <span class=\"token string\">'./CheckBox'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PascalCase export/import/filename</span>\n<span class=\"token keyword\">import</span> fortyTwo <span class=\"token keyword\">from</span> <span class=\"token string\">'./fortyTwo'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// camelCase export/import/filename</span>\n<span class=\"token keyword\">import</span> insideDirectory <span class=\"token keyword\">from</span> <span class=\"token string\">'./insideDirectory'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// camelCase export/import/directory name/implicit \"index\"</span>\n<span class=\"token comment\">// ^ supports both insideDirectory.js and insideDirectory/index.js</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h1>\n<ul>\n<li>변수의 이름은 <strong>lowerCamelCase</strong>로 표기한다.단, export되는 파일 내의 상수는 예외.</li>\n<li>\n<p>변수의 이름은 <strong>알파벳</strong>으로 시작해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">let</span> <span class=\"token number\">123</span>Number <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token constant\">HELLO_WORLD</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">let</span> number <span class=\"token operator\">=</span> <span class=\"token number\">369</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> helloString <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"함수\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98\" aria-label=\"함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수</h1>\n<ul>\n<li>\n<p>함수는 <strong>lowerCamelCase</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>함수의 이름은 동사 또는 동사구문으로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">whereIsCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">findCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// getter</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">setBar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// setter</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hasCoo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// booleans</span></code></pre></div>\n</li>\n<li>\n<p>함수를 default export할 때는 <strong>camelCase</strong>로 표기한다.단, 함수의 이름이 파일의 이름과 구분되어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeStyleGuide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> makeStyleGuide<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>함수 라이브러리를 export할 때는 <strong>PascalCase</strong>로 표기한다.</li>\n<li>\n<p>함수의 파라미터는 <strong>lowerCamelCase</strong>로 표기한다.단, 한글자의 파라미터는 public 메소드에서는 사용하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">someFunction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token constant\">SOMEVALUE</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SOMEARRAY</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">someFunction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">someValue<span class=\"token punctuation\">,</span> someArray</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>템플릿 함수의 파라미터는 모두 간결해야하고 <strong>한글자</strong> 또는 <strong>한단어</strong>여야 한다.또, <strong>모두 대문자</strong>로 표기한다.</li>\n</ul>\n<h1 id=\"객체\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4\" aria-label=\"객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체</h1>\n<ul>\n<li>\n<p>객체의 이름은 <strong>lowerCamelCase</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">const</span> OBJEcttsssss <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> this_is_my_object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">const</span> thisIsMyObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">thisIsMyFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>객체를 export할 때는 <strong>PascalCase</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> AirbnbStyleGuide <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  es6<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AirbnbStyleGuide<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h1 id=\"클래스\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스</h1>\n<ul>\n<li>\n<p>클래스나 생성자의 이름은 <strong>PascalCase</strong>로 표기한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> bad <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'nope'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> good <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'yup'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>클래스의 이름은 <strong>명사</strong> 또는 <strong>명사구문</strong>으로 표기한다.또한, 인터페이스의 경우 명사 대신 <strong>형용사</strong> 또는 <strong>형용사구문</strong>으로 표기할 수 있다.</li>\n<li>클래스를 export할 때는 <strong>PascalCase</strong>로 표기한다.</li>\n</ul>","excerpt":"개인적으로 코딩 컨밴션을 중요하게 생각하는 편이다. 변수명, 함수명 등을 통일된 네이밍으로 사용하는 습관이 필요하다. 이 습관은 자신의 코드를 나와 다른 이들이 볼 때 조금 더 빠르게 이해할 수 있는데 도움이 된다고 생각한다. 그래서 자바크립스를 깊…","tableOfContents":"<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li><a href=\"/210315-post/#%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%BD%94%EB%94%A9-%EC%BB%A8%EB%B0%B4%EC%85%98%EC%9D%84-%EC%A4%91%EC%9A%94%ED%95%98%EA%B2%8C-%EC%83%9D%EA%B0%81%ED%95%98%EB%8A%94-%ED%8E%B8%EC%9D%B4%EB%8B%A4\">개인적으로 코딩 컨밴션을 중요하게 생각하는 편이다.</a></li>\n<li><a href=\"/210315-post/#%EB%B3%80%EC%88%98%EB%AA%85-%ED%95%A8%EC%88%98%EB%AA%85-%EB%93%B1%EC%9D%84-%ED%86%B5%EC%9D%BC%EB%90%9C-%EB%84%A4%EC%9D%B4%EB%B0%8D%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%8A%B5%EA%B4%80%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%98%EB%8B%A4\">변수명, 함수명 등을 통일된 네이밍으로 사용하는 습관이 필요하다.</a></li>\n<li><a href=\"/210315-post/#%EC%9D%B4-%EC%8A%B5%EA%B4%80%EC%9D%80-%EC%9E%90%EC%8B%A0%EC%9D%98-%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%82%98%EC%99%80-%EB%8B%A4%EB%A5%B8-%EC%9D%B4%EB%93%A4%EC%9D%B4-%EB%B3%BC-%EB%95%8C-%EC%A1%B0%EA%B8%88-%EB%8D%94-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EB%8D%B0-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%9C%EB%8B%A4%EA%B3%A0-%EC%83%9D%EA%B0%81%ED%95%9C%EB%8B%A4\">이 습관은 자신의 코드를 나와 다른 이들이 볼 때 조금 더 빠르게 이해할 수 있는데 도움이 된다고 생각한다.</a></li>\n<li><a href=\"/210315-post/#%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%9E%90%EB%B0%94%ED%81%AC%EB%A6%BD%EC%8A%A4%EB%A5%BC-%EA%B9%8A%EC%88%99%ED%9E%88-%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C-%EC%BD%94%EB%94%A9-%EC%BB%A8%EB%B0%B4%EC%85%98%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%95%98%EB%8B%A4\">그래서 자바크립스를 깊숙히 들어가기 앞서, 코딩 컨밴션에 대해서 알아보았다.</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/210315-post/#%EB%AA%A9%EC%B0%A8\">목차</a></li>\n<li><a href=\"/210315-post/#%EB%84%A4%EC%9D%B4%EB%B0%8D-%EA%B8%B0%EB%B3%B8\">네이밍 기본</a></li>\n<li><a href=\"/210315-post/#%ED%8C%8C%EC%9D%BC-%EB%B0%8F-%ED%8C%A8%ED%82%A4%EC%A7%80\">파일 및 패키지</a></li>\n<li><a href=\"/210315-post/#%EB%B3%80%EC%88%98\">변수</a></li>\n<li><a href=\"/210315-post/#%ED%95%A8%EC%88%98\">함수</a></li>\n<li><a href=\"/210315-post/#%EA%B0%9D%EC%B2%B4\">객체</a></li>\n<li><a href=\"/210315-post/#%ED%81%B4%EB%9E%98%EC%8A%A4\">클래스</a></li>\n</ul>","fields":{"slug":"/210315-post/"},"frontmatter":{"title":"자바스크립트 코딩 컨밴션","date":"Mar 15, 2021","tags":["자바스크립트","코딩컨밴션"],"keywords":["Jiwoong DEV BLOG","오지웅"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/210315-post/","series":[],"lastmod":"2021-03-15"}},"staticQueryHashes":["2027115977","694178885"]}