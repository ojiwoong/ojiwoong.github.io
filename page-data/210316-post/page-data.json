{"componentChunkName":"component---src-templates-post-tsx","path":"/210316-post/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"-홀수-자바스크립트-알고리즘\" style=\"position:relative;\"><a href=\"#-%ED%99%80%EC%88%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\" 홀수 자바스크립트 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📘 홀수 [자바스크립트 알고리즘]</h1>\n<h2 id=\"-문제\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C\" aria-label=\" 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 문제</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7개의 자연수가 주어질 때, 이들 중 홀수인 자연수들을 모두 골라 그 합을 구하고, 고른 홀수들\n중 최소값을 찾는 프로그램을 작성하세요.\n예를 들어, 7개의 자연수 12, 77, 38, 41, 53, 92, 85가 주어지면 이들 중 홀수는 77, 41, 53,\n85이므로 그 합은\n\n77 + 41 + 53 + 85\n\n이 되고,\n\n41 &lt; 53 &lt; 77 &lt; 85\n\n이므로 홀수들 중 최소값은 41이 된다.\n\n💬 입력설명\n\n첫 번째 줄에 자연수 7개가 주어진다. 주어지는 자연수는 100보다 작다. 홀수가 한 개 이상\n반드시 존재한다.\n\n💬 출력설명\n\n첫째 줄에 홀수들의 합을 출력하고, 둘째 줄에 홀수들 중 최소값을 출력한다.\n\n💬 입력예제 1\n\n12 77 38 41 53 92 85\n\n💬 출력예제 1\n\n256  41\n\n출처 : 한국정보올림피아드</code></pre></div>\n<h2 id=\"-풀이\" style=\"position:relative;\"><a href=\"#-%ED%92%80%EC%9D%B4\" aria-label=\" 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 풀이</h2>\n<h3 id=\"최초-풀이\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%B4%88-%ED%92%80%EC%9D%B4\" aria-label=\"최초 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최초 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">출력결과</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      function solution(arr) {\n        let answer = [];\n        let sum = 0;\n        let min = 1000;\n\n        odd_arr = [];\n        for (let i = 0; i &lt; arr.length; i++) {\n          if (arr[i] % 2 != 0) odd_arr.push(arr[i]);\n        }\n\n        for (let i = 0; i &lt; odd_arr.length; i++) {\n          sum = sum + odd_arr[i];\n\n          if (min > odd_arr[i]) min = odd_arr[i];\n        }\n\n        answer.push(sum);\n        answer.push(min);\n\n        return answer;\n      }\n\n      arr = [12, 77, 38, 41, 53, 92, 85];\n      console.log(solution(arr));\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>for문을 사용해서 odd_arr 배열에 홀수들을 담아두고,</p>\n<p>odd_arr 배열을 for문을 사용해서 sum 값과 min 값을 구해주었다.</p>\n<h3 id=\"개선-시간-효율-고려\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%84%A0-%EC%8B%9C%EA%B0%84-%ED%9A%A8%EC%9C%A8-%EA%B3%A0%EB%A0%A4\" aria-label=\"개선 시간 효율 고려 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개선 [시간 효율 고려]</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">출력결과</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      function solution(arr) {\n        let answer = [];\n        let sum = 0;\n        let min = 1000;\n\n        odd_arr = [];\n        for (let i = 0; i &lt; arr.length; i++) {\n          if (arr[i] % 2 === 1) {\n            sum += arr[i];\n\n            if (min > arr[i]) min = arr[i];\n          }\n        }\n\n        answer.push(sum);\n        answer.push(min);\n\n        return answer;\n      }\n\n      arr = [12, 77, 38, 41, 53, 92, 85];\n      console.log(solution(arr));\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>홀수들을 따로 담는 배열을 만들지 않고, 바로 홀수를 체크하는 for문에서 값들을 대입해주었다.</p>\n<p>홀수를 따로 담고, 배열에 담아서 그 배열을 또 for문을 돌리는 것 자체가 일을 한번 더 하는 것이라 시간을 고려했을 때 비효율적인 코드인 것 같다고 생각했다.</p>\n<p>평소 항상 판별한 데이터들을 담아두고, 담아둔 데이터에서 가져가다 쓰는 방식이 습관화 되서 그런 것 같다. 하지만, 어느것이 맞고, 어느것이 틀리다기 보단 상황에 맞게 쓰는 것이 좋다고 생각된다.</p>\n<p>그리고 일반적인  for문 대신에 foreach, for-in, for-of 를 사용해서 코드를 간결화 시키면 좋을거란 생각이 들었다.</p>\n<p>다음 포스팅에서는 foreach, for ... in, for ... of 의 특징 및 차이점에 대해서 알아보려고 한다.</p>","excerpt":"📘 홀수 자바스크립트 알고리즘 📖 문제 📖 풀이 최초 풀이 for문을 사용해서 odd_arr 배열에 홀수들을 담아두고, odd_arr 배열을 for문을 사용해서 sum 값과 min 값을 구해주었다. 개선 시간 효율 고려 홀수들을 따로 담는 배열을 만…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/210316-post/#-%ED%99%80%EC%88%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">📘 홀수 자바스크립트 알고리즘</a></p>\n<ul>\n<li><a href=\"/210316-post/#-%EB%AC%B8%EC%A0%9C\">📖 문제</a></li>\n<li>\n<p><a href=\"/210316-post/#-%ED%92%80%EC%9D%B4\">📖 풀이</a></p>\n<ul>\n<li><a href=\"/210316-post/#%EC%B5%9C%EC%B4%88-%ED%92%80%EC%9D%B4\">최초 풀이</a></li>\n<li><a href=\"/210316-post/#%EA%B0%9C%EC%84%A0-%EC%8B%9C%EA%B0%84-%ED%9A%A8%EC%9C%A8-%EA%B3%A0%EB%A0%A4\">개선 시간 효율 고려</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/210316-post/"},"frontmatter":{"title":"홀수 [자바스크립트 알고리즘]","date":"Mar 16, 2021","tags":["자바스크립트","알고리즘"],"keywords":["Jiwoong DEV BLOG","오지웅"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/210316-post/","series":[],"lastmod":"2021-03-16"}},"staticQueryHashes":["2027115977","694178885"]}